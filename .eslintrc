{
  parser: 'babel-eslint',
  env: {
    browser: true,
    node: true,
    es6: true,
  },
  plugins: [
    'react'
  ],
  ecmaFeatures: {
    modules: true,
  },
  rules: {
    block-scoped-var: 2,
    brace-style: [2, '1tbs'],
    comma-dangle: 0,
    comma-style: [1, 'last'],
    consistent-this: [2, 'that'],
    curly: [1, 'multi-line'],
    default-case: 2,
    generator-star-spacing: [2, 'before'],
    guard-for-in: 2,
    indent: [2, 2, {SwitchCase: 1}],
    max-len: [2, 80, 4],
    new-cap: 0,
    no-else-return: 2,
    no-floating-decimal: 2,
    no-lonely-if: 2,
    no-multiple-empty-lines: [2, {max: 1}],
    no-param-reassign: 2,
    no-plusplus: 2,
    no-throw-literal: 2,
    no-undefined: 2,
    no-underscore-dangle: 0,
    no-unneeded-ternary: 2,
    no-var: 2,
    no-void: 2,
    one-var: [2, 'never'],
    prefer-const: 2,
    quotes: [1, 'single'],
    radix: 2,
    semi: [1, 'always'],
    space-before-function-paren: [1, 'never'],
    spaced-comment: [1, 'always'],
    strict: [2, 'global'],
    vars-on-top: 2,
    wrap-regex: 1,
    'react/display-name': [1, {acceptTranspilerName: true}],
    'react/jsx-boolean-value': 1,
    'react/jsx-curly-spacing': [1, 'never'],
    'react/jsx-max-props-per-line': [1, {maximum: 3}],
    'react/jsx-no-duplicate-props': 1,
    'react/jsx-no-undef': 1,
    'react/jsx-quotes': [1, 'single'],
    'react/jsx-sort-prop-types': 0,
    'react/jsx-sort-props': 0,
    'react/jsx-uses-react': 1,
    'react/jsx-uses-vars': 1,
    'react/no-danger': 1,
    'react/no-did-mount-set-state': 1,
    'react/no-did-update-set-state': 1,
    'react/no-multi-comp': 1,
    'react/no-unknown-property': 1,
    'react/prop-types': 1,
    'react/react-in-jsx-scope': 1,
    'react/require-extension': 1,
    'react/self-closing-comp': 1,
    'react/sort-comp': [1, {
      order: [
        'statics',
        'lifecycle',
        'everything-else',
        'rendering',
      ],
      groups: {
        statics: [
          'displayName',
          'propTypes',
          'contextTypes',
          'childContextTypes',
          'mixins',
          'statics',
          'needs',
          'defaultProps',
        ],
        lifecycle: [
          'constructor',
          'getDefaultProps',
          'getInitialState',
          'getChildContext',
          'componentWillMount',
          'componentDidMount',
          'componentWillReceiveProps',
          'shouldComponentUpdate',
          'componentWillUpdate',
          'componentDidUpdate',
          'componentWillUnmount'
        ],
        rendering: [
          '/^render.+$/',
          'render'
        ]
      }
    }],
    'react/wrap-multilines': 1
  }
}
